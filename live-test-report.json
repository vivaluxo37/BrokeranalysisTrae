{
  "summary": {
    "totalPages": 41,
    "passedPages": 41,
    "failedPages": 0,
    "totalIssues": 349,
    "duration": "9 minutes",
    "startTime": "2025-08-09T16:49:13.667Z",
    "endTime": "2025-08-09T16:58:11.398Z"
  },
  "issuesByType": {
    "Console Error": [
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:29.520Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:37.281Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:38.068Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:39.020Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:40.136Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:12.835Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:12.846Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:13.039Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:13.856Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:14.723Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:15.538Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:16.499Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:17.674Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:17.868Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:18.746Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:19.462Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:42.679Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:42.727Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:43.235Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:44.009Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:44.837Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.158Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.888Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:46.456Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:46.972Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:47.628Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:05.270Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:05.805Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:06.382Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:06.824Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:07.028Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:07.642Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:07.841Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.032Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.670Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.869Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:09.054Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:09.512Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:09.699Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:09.844Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:10.016Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:10.871Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:22.719Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:23.472Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:23.716Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:24.393Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:24.863Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.350Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.923Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:26.495Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:27.376Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:33.446Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:33.877Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:35.010Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:35.877Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.839Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:37.722Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:38.415Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:44.208Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:44.547Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:45.657Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:46.572Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:48.176Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:48.299Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:49.054Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:49.853Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:20.958Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:21.822Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:22.984Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.754Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:24.637Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:25.206Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:25.678Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:54.997Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:55.806Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:56.693Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:57.564Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.390Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:59.001Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:59.697Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:55:00.669Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:08.680Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:09.438Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:10.685Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.872Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:12.387Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:13.066Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:13.374Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:14.355Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:22.358Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:22.372Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:23.229Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:24.036Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:24.972Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.761Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:26.421Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:27.011Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:15.191Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:15.699Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:16.732Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:17.518Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:17.951Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.662Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:19.441Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:19.692Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:24.858Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:25.543Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:26.501Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.445Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:28.073Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:28.445Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:29.113Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:29.479Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:38.390Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:38.398Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:38.402Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:38.406Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:38.409Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:38.577Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:39.325Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:40.057Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:40.829Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.797Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:42.721Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:43.493Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:50.216Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:50.221Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:50.225Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:50.619Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:51.177Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:51.591Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:52.148Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:52.574Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.125Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.568Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:54.164Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:54.874Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:55.705Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:02.162Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:02.827Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:03.946Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:04.755Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.719Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:06.659Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:17.161Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:17.177Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:17.446Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:18.260Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:19.073Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:19.650Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.463Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:21.235Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:21.969Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:22.221Z"
      },
      {
        "type": "Console Error",
        "message": "Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information. \n\nCheck the render method of `EducationalSpotlightSection`. ",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:05.748Z"
      },
      {
        "type": "Console Error",
        "message": "Failed to load resource: the server responded with a status of 403 ()",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:05.758Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:05.761Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:05.762Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:06.364Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:07.335Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:07.942Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:08.761Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.431Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:10.344Z"
      },
      {
        "type": "Console Error",
        "message": "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:11.204Z"
      }
    ],
    "Broken Link": [
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:37.875Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:37.876Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:37.877Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:16.712Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:16.767Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:16.861Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.647Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.647Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.647Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.101Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.101Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.101Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.776Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.777Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.795Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.542Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.543Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.543Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.297Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.298Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.316Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.886Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.886Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.887Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.075Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.076Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.076Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.473Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.477Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.477Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.426Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.435Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.435Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.286Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.286Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.287Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.897Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.898Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.898Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.414Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.415Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.415Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.255Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.256Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.256Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.220Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.221Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.221Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.271Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.272Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.273Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.239Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.240Z"
      },
      {
        "type": "Broken Link",
        "message": "Broken link: /education/undefined",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.240Z"
      }
    ],
    "Image Issue": [
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:38.023Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:38.024Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:38.024Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/",
        "timestamp": "2025-08-09T16:49:38.024Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:17.115Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:17.207Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:17.293Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/ic-markets-vs-pepperstone",
        "timestamp": "2025-08-09T16:51:17.446Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.668Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.668Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.669Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/tools/fee-calculator",
        "timestamp": "2025-08-09T16:51:45.669Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.118Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.119Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.120Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/contact",
        "timestamp": "2025-08-09T16:52:08.120Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.878Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.902Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.902Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/oanda-vs-forex-com",
        "timestamp": "2025-08-09T16:53:25.919Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.651Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.654Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.655Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/xm-vs-avatrade",
        "timestamp": "2025-08-09T16:53:36.659Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.547Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.729Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.904Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/compare/etoro-vs-plus500",
        "timestamp": "2025-08-09T16:53:47.976Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.904Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.905Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.905Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/tools/pip-calculator",
        "timestamp": "2025-08-09T16:54:23.908Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.735Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.843Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.896Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/education/forex-basics",
        "timestamp": "2025-08-09T16:54:58.914Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.592Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.631Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.631Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/education/trading-strategies",
        "timestamp": "2025-08-09T16:55:11.732Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.552Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.554Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.569Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/education/risk-management",
        "timestamp": "2025-08-09T16:55:25.570Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.315Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.315Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.316Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/community/reviews",
        "timestamp": "2025-08-09T16:56:18.317Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.918Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.919Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.920Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/privacy-policy",
        "timestamp": "2025-08-09T16:56:27.920Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.442Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.446Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.447Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/terms-of-service",
        "timestamp": "2025-08-09T16:56:41.449Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.276Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.276Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.276Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/disclaimer",
        "timestamp": "2025-08-09T16:56:53.277Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.247Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.251Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.253Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/news/market-analysis",
        "timestamp": "2025-08-09T16:57:05.257Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.295Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.299Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.301Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/news/broker-updates",
        "timestamp": "2025-08-09T16:57:20.302Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.327Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.335Z"
      },
      {
        "type": "Image Issue",
        "message": "Image with invalid src: ",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.338Z"
      },
      {
        "type": "Image Issue",
        "message": "Failed to load image: ",
        "url": "http://localhost:5173/community/forum",
        "timestamp": "2025-08-09T16:58:09.356Z"
      }
    ],
    "Page Error": [
      {
        "type": "Page Error",
        "message": "broker is not defined",
        "url": "http://localhost:5173/brokers/pepperstone",
        "timestamp": "2025-08-09T16:50:22.716Z"
      },
      {
        "type": "Page Error",
        "message": "broker is not defined",
        "url": "http://localhost:5173/brokers/fp-markets",
        "timestamp": "2025-08-09T16:50:36.097Z"
      },
      {
        "type": "Page Error",
        "message": "broker is not defined",
        "url": "http://localhost:5173/brokers/oanda",
        "timestamp": "2025-08-09T16:50:49.853Z"
      },
      {
        "type": "Page Error",
        "message": "broker is not defined",
        "url": "http://localhost:5173/brokers/xm",
        "timestamp": "2025-08-09T16:51:00.958Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/tools/find-my-broker",
        "timestamp": "2025-08-09T16:51:27.667Z"
      },
      {
        "type": "Page Error",
        "message": "broker is not defined",
        "url": "http://localhost:5173/brokers/avatrade",
        "timestamp": "2025-08-09T16:52:21.627Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/brokers/etoro",
        "timestamp": "2025-08-09T16:52:31.700Z"
      },
      {
        "type": "Page Error",
        "message": "broker is not defined",
        "url": "http://localhost:5173/brokers/plus500",
        "timestamp": "2025-08-09T16:52:41.325Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/tools/spread-comparison",
        "timestamp": "2025-08-09T16:53:56.941Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/tools/leverage-calculator",
        "timestamp": "2025-08-09T16:54:10.590Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/education",
        "timestamp": "2025-08-09T16:54:33.219Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/education/trading-glossary",
        "timestamp": "2025-08-09T16:54:43.911Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/news",
        "timestamp": "2025-08-09T16:55:32.865Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/countries/united-states",
        "timestamp": "2025-08-09T16:55:43.127Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/countries/united-kingdom",
        "timestamp": "2025-08-09T16:55:53.765Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/countries/australia",
        "timestamp": "2025-08-09T16:56:05.019Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/countries/canada",
        "timestamp": "2025-08-09T16:57:27.758Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/countries/germany",
        "timestamp": "2025-08-09T16:57:37.387Z"
      },
      {
        "type": "Page Error",
        "message": "Cannot read properties of undefined (reading 'add')",
        "url": "http://localhost:5173/countries/france",
        "timestamp": "2025-08-09T16:57:48.588Z"
      }
    ],
    "SEO Issue": [
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/pepperstone",
        "timestamp": "2025-08-09T16:50:25.744Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/pepperstone",
        "timestamp": "2025-08-09T16:50:25.745Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/fp-markets",
        "timestamp": "2025-08-09T16:50:39.106Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/fp-markets",
        "timestamp": "2025-08-09T16:50:39.107Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/oanda",
        "timestamp": "2025-08-09T16:50:52.864Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/oanda",
        "timestamp": "2025-08-09T16:50:52.864Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/xm",
        "timestamp": "2025-08-09T16:51:03.960Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/xm",
        "timestamp": "2025-08-09T16:51:03.961Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/tools/find-my-broker",
        "timestamp": "2025-08-09T16:51:30.622Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/tools/find-my-broker",
        "timestamp": "2025-08-09T16:51:30.623Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/about",
        "timestamp": "2025-08-09T16:51:55.517Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/avatrade",
        "timestamp": "2025-08-09T16:52:24.629Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/avatrade",
        "timestamp": "2025-08-09T16:52:24.630Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/etoro",
        "timestamp": "2025-08-09T16:52:34.702Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/etoro",
        "timestamp": "2025-08-09T16:52:34.702Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/brokers/plus500",
        "timestamp": "2025-08-09T16:52:44.335Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/brokers/plus500",
        "timestamp": "2025-08-09T16:52:44.336Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/tools/spread-comparison",
        "timestamp": "2025-08-09T16:53:59.931Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/tools/spread-comparison",
        "timestamp": "2025-08-09T16:53:59.932Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/tools/leverage-calculator",
        "timestamp": "2025-08-09T16:54:13.593Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/tools/leverage-calculator",
        "timestamp": "2025-08-09T16:54:13.594Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/education",
        "timestamp": "2025-08-09T16:54:36.221Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/education",
        "timestamp": "2025-08-09T16:54:36.222Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/education/trading-glossary",
        "timestamp": "2025-08-09T16:54:46.595Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/education/trading-glossary",
        "timestamp": "2025-08-09T16:54:46.595Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/news",
        "timestamp": "2025-08-09T16:55:35.875Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/news",
        "timestamp": "2025-08-09T16:55:35.875Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/countries/united-states",
        "timestamp": "2025-08-09T16:55:46.136Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/countries/united-states",
        "timestamp": "2025-08-09T16:55:46.137Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/countries/united-kingdom",
        "timestamp": "2025-08-09T16:55:56.775Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/countries/united-kingdom",
        "timestamp": "2025-08-09T16:55:56.775Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/countries/australia",
        "timestamp": "2025-08-09T16:56:08.024Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/countries/australia",
        "timestamp": "2025-08-09T16:56:08.025Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/countries/canada",
        "timestamp": "2025-08-09T16:57:30.705Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/countries/canada",
        "timestamp": "2025-08-09T16:57:30.706Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/countries/germany",
        "timestamp": "2025-08-09T16:57:40.199Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/countries/germany",
        "timestamp": "2025-08-09T16:57:40.199Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing meta description",
        "url": "http://localhost:5173/countries/france",
        "timestamp": "2025-08-09T16:57:51.613Z"
      },
      {
        "type": "SEO Issue",
        "message": "Missing H1 tag",
        "url": "http://localhost:5173/countries/france",
        "timestamp": "2025-08-09T16:57:51.613Z"
      }
    ]
  },
  "criticalIssues": [
    {
      "type": "Page Error",
      "message": "broker is not defined",
      "url": "http://localhost:5173/brokers/pepperstone",
      "timestamp": "2025-08-09T16:50:22.716Z"
    },
    {
      "type": "Page Error",
      "message": "broker is not defined",
      "url": "http://localhost:5173/brokers/fp-markets",
      "timestamp": "2025-08-09T16:50:36.097Z"
    },
    {
      "type": "Page Error",
      "message": "broker is not defined",
      "url": "http://localhost:5173/brokers/oanda",
      "timestamp": "2025-08-09T16:50:49.853Z"
    },
    {
      "type": "Page Error",
      "message": "broker is not defined",
      "url": "http://localhost:5173/brokers/xm",
      "timestamp": "2025-08-09T16:51:00.958Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/tools/find-my-broker",
      "timestamp": "2025-08-09T16:51:27.667Z"
    },
    {
      "type": "Page Error",
      "message": "broker is not defined",
      "url": "http://localhost:5173/brokers/avatrade",
      "timestamp": "2025-08-09T16:52:21.627Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/brokers/etoro",
      "timestamp": "2025-08-09T16:52:31.700Z"
    },
    {
      "type": "Page Error",
      "message": "broker is not defined",
      "url": "http://localhost:5173/brokers/plus500",
      "timestamp": "2025-08-09T16:52:41.325Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/tools/spread-comparison",
      "timestamp": "2025-08-09T16:53:56.941Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/tools/leverage-calculator",
      "timestamp": "2025-08-09T16:54:10.590Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/education",
      "timestamp": "2025-08-09T16:54:33.219Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/education/trading-glossary",
      "timestamp": "2025-08-09T16:54:43.911Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/news",
      "timestamp": "2025-08-09T16:55:32.865Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/countries/united-states",
      "timestamp": "2025-08-09T16:55:43.127Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/countries/united-kingdom",
      "timestamp": "2025-08-09T16:55:53.765Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/countries/australia",
      "timestamp": "2025-08-09T16:56:05.019Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/countries/canada",
      "timestamp": "2025-08-09T16:57:27.758Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/countries/germany",
      "timestamp": "2025-08-09T16:57:37.387Z"
    },
    {
      "type": "Page Error",
      "message": "Cannot read properties of undefined (reading 'add')",
      "url": "http://localhost:5173/countries/france",
      "timestamp": "2025-08-09T16:57:48.588Z"
    }
  ],
  "recommendations": [
    "Fix console errors to improve user experience and debugging",
    "Address SEO issues to improve search engine visibility",
    "Fix broken links to improve navigation and user experience",
    "Resolve image loading issues to improve page performance"
  ]
}