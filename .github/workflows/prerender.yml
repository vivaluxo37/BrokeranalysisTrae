name: Automated Prerendering

on:
  # Run prerendering on schedule (daily at 2 AM UTC)
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all pages'
        required: false
        default: 'false'
        type: boolean
  
  # Run on content updates
  push:
    paths:
      - 'src/data/**'
      - 'public/locales/**'
      - 'scraped_data/**'
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  prerender:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'brokeranalysis/package-lock.json'

      - name: Install dependencies
        run: |
          cd brokeranalysis
          npm ci

      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Build project
        run: |
          cd brokeranalysis
          npm run build:skip-lint
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_GROQ_API_KEY: ${{ secrets.VITE_GROQ_API_KEY }}
          VITE_OPENROUTER_API_KEY: ${{ secrets.VITE_OPENROUTER_API_KEY }}

      - name: Run prerendering
        run: |
          cd brokeranalysis
          npm run prerender
        env:
          PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
          FORCE_REBUILD: ${{ github.event.inputs.force_rebuild || 'false' }}

      - name: Upload prerendered artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prerendered-pages
          path: brokeranalysis/dist/
          retention-days: 7

      - name: Deploy to Vercel (if main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          npm install --global vercel@latest
          cd brokeranalysis
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Generate prerender report
        run: |
          cd brokeranalysis
          echo "## Prerender Report" > prerender-report.md
          echo "**Date:** $(date)" >> prerender-report.md
          echo "**Commit:** ${{ github.sha }}" >> prerender-report.md
          echo "**Pages processed:** $(find dist -name '*.html' | wc -l)" >> prerender-report.md
          echo "**Sitemap generated:** $(test -f dist/sitemap.xml && echo 'Yes' || echo 'No')" >> prerender-report.md
          echo "**Manifest generated:** $(test -f dist/manifest.json && echo 'Yes' || echo 'No')" >> prerender-report.md

      - name: Comment on commit (if triggered by push)
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('brokeranalysis/prerender-report.md', 'utf8');
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `üöÄ **Automated Prerendering Completed**\n\n${report}`
            });

  notify:
    needs: prerender
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify prerender status
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.prerender.result }}';
            const emoji = status === 'success' ? '‚úÖ' : '‚ùå';
            const trigger = '${{ github.event_name }}';
            
            let triggerText = '';
            if (trigger === 'schedule') {
              triggerText = 'Scheduled prerendering';
            } else if (trigger === 'workflow_dispatch') {
              triggerText = 'Manual prerendering';
            } else if (trigger === 'push') {
              triggerText = 'Content update prerendering';
            }
            
            const message = `${emoji} **${triggerText} ${status.toUpperCase()}**\n\n**Commit:** ${context.sha.substring(0, 7)}\n**Workflow:** [View Details](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
            
            console.log(message);