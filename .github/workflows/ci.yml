name: Enhanced CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.x'
  CACHE_VERSION: v1

jobs:
  quality-checks:
    name: Code Quality & Type Safety
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: brokeranalysis/package-lock.json
        
    - name: Install dependencies
      run: |
        cd brokeranalysis
        npm ci --legacy-peer-deps
        
    - name: Type check
      run: |
        cd brokeranalysis
        npm run type-check
        
    - name: Lint check
      run: |
        cd brokeranalysis
        npm run lint
        
    - name: Format check
      run: |
        cd brokeranalysis
        npm run format:check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: brokeranalysis/package-lock.json
        
    - name: Install dependencies
      run: |
        cd brokeranalysis
        npm ci --legacy-peer-deps
        
    - name: Run unit tests with coverage
      run: |
        cd brokeranalysis
        npm run test:unit:coverage
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        file: brokeranalysis/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: brokeranalysis/package-lock.json
        
    - name: Install dependencies
      run: |
        cd brokeranalysis
        npm ci --legacy-peer-deps
        
    - name: Install Playwright browsers
      run: |
        cd brokeranalysis
        npx playwright install --with-deps ${{ matrix.browser }}
        
    - name: Run E2E tests
      run: |
        cd brokeranalysis
        npx playwright test --project=${{ matrix.browser }}
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: brokeranalysis/playwright-report/
        retention-days: 30

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: brokeranalysis/package-lock.json
        
    - name: Install dependencies
      run: |
        cd brokeranalysis
        npm ci --legacy-peer-deps
        
    - name: Build application
      run: |
        cd brokeranalysis
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ github.sha }}
        path: brokeranalysis/dist/
        retention-days: 7
        
    - name: Build size analysis
      run: |
        cd brokeranalysis
        du -sh dist/
        find dist/ -name "*.js" -exec du -h {} \; | sort -hr | head -10

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: brokeranalysis/package-lock.json
        
    - name: Install dependencies
      run: |
        cd brokeranalysis
        npm ci --legacy-peer-deps
        
    - name: Run security audit
      run: |
        cd brokeranalysis
        npm audit --audit-level=moderate
        
    - name: Check for known vulnerabilities
      run: |
        cd brokeranalysis
        npx audit-ci --moderate